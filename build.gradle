/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
plugins {
    id 'java-library'
	id 'org.docstr.gwt' version '1.1.21'
}

group = 'java.org.fstrf.stanfordAsiInterpreter.resistance'
version = '1.6.1'

sourceCompatibility = 15
targetCompatibility = 15

description = 'ASI (Algorithm Specification Interface) Interpreter'

repositories {
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    implementation 'commons-cli:commons-cli:1.1'

    // https://mvnrepository.com/artifact/commons-collections/commons-collections
    implementation 'commons-collections:commons-collections:2.1.1'

    // https://mvnrepository.com/artifact/dom4j/dom4j
    implementation 'org.dom4j:dom4j:2.0.2'

    // https://mvnrepository.com/artifact/jaxen/jaxen
    implementation 'jaxen:jaxen:1.1'

    // https://mvnrepository.com/artifact/com.google.elemental2/elemental2-core
    implementation 'com.google.elemental2:elemental2-core:1.1.0'

    // https://mvnrepository.com/artifact/com.google.elemental2/elemental2-dom
    implementation 'com.google.elemental2:elemental2-dom:1.1.0'

    // https://mvnrepository.com/artifact/com.google.jsinterop/base
    implementation 'com.google.jsinterop:base:1.0.0'

    // https://mvnrepository.com/artifact/com.google.guava/guava-gwt
    implementation 'com.google.guava:guava-gwt:31.1-jre'

    // https://mvnrepository.com/artifact/com.google.jsinterop/jsinterop-annotations
    implementation 'com.google.jsinterop:jsinterop-annotations:1.0.2'

    // https://mvnrepository.com/artifact/junit/junit
    testImplementation 'junit:junit:4.12'
}

sourceSets {
    main {
        java {
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
    test {
        java {
            srcDir 'test/src/java'
        }
        resources {
            srcDir 'test/files'
        }
    }
}

task cleanJavadoc(type: Delete) {
    delete 'doc'
}

task copyJavadoc(type: Copy) {
    from 'build/docs/javadoc'
    into 'doc'
}

javadoc.dependsOn copyJavadoc
javadoc.dependsOn cleanJavadoc
copyJavadoc.shouldRunAfter javadoc
copyJavadoc.shouldRunAfter cleanJavadoc

gwt {
    gwtVersion = '2.10.0'
    logLevel = 'INFO'
    maxHeapSize = "1G"
    minHeapSize = "1G"
    modules 'org.fstrf.stanfordAsiInterpreter.resistance.Resistance'

    compiler {
        style = "PRETTY"
    }

    jsInteropExports {
        shouldGenerate = true
    }
}

import org.apache.tools.ant.filters.*

task afterCompileGwt(type: Copy) {
	inputs.files 'build.gradle'
    inputs.files 'build/gwt/out/asijs/asijs.nocache.js'
    inputs.files 'src/resources/provide.js'
    inputs.files 'src/resources/exports.js'
    from 'build/gwt/out/asijs/asijs.nocache.js'
    into 'dist/'
    rename { String fileName -> 'asi-js.js' }
    filter { line -> line.replaceAll('function provide\\(', 'function dontprovide(') }
    filter { line -> line.replaceAll('\\bcomputeScriptBase\\(\\);', '// $0') }
    filter { line -> line.replaceAll('__gwt_isKnownPropertyValue =', 'var $0') }
    filter { line -> line.replaceAll('__gwt_getMetaProperty =', 'var $0') }
    filter(ConcatFilter, prepend: file('src/resources/provide.js'))
    filter(ConcatFilter, append: file('src/resources/exports.js'))
}

compileGwt.finalizedBy(afterCompileGwt)
